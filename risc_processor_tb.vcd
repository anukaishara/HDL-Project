$date
	Sun Jun 29 21:33:57 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_risc_processor $end
$var wire 16 ! instruction [15:0] $end
$var wire 1 " mem_write $end
$var wire 3 # opcode [2:0] $end
$var wire 8 $ pc_current [7:0] $end
$var wire 1 % pc_src $end
$var wire 8 & regs_0 [7:0] $end
$var wire 8 ' regs_1 [7:0] $end
$var wire 8 ( regs_2 [7:0] $end
$var wire 8 ) regs_3 [7:0] $end
$var wire 8 * data_out [7:0] $end
$var reg 1 + clk $end
$var reg 8 , external_data_in [7:0] $end
$var reg 1 - reset $end
$scope module uut $end
$var wire 1 + clk $end
$var wire 8 . external_data_in [7:0] $end
$var wire 1 - reset $end
$var wire 8 / write_data_reg [7:0] $end
$var wire 2 0 rs2 [1:0] $end
$var wire 2 1 rs1 [1:0] $end
$var wire 1 2 reg_write $end
$var wire 8 3 read_data2 [7:0] $end
$var wire 8 4 read_data1 [7:0] $end
$var wire 2 5 rd [1:0] $end
$var wire 1 6 pc_src $end
$var wire 8 7 pc_plus1 [7:0] $end
$var wire 8 8 pc_next [7:0] $end
$var wire 8 9 pc_current [7:0] $end
$var wire 3 : opcode [2:0] $end
$var wire 1 ; mem_write $end
$var wire 1 < mem_to_reg $end
$var wire 8 = mem_read_data [7:0] $end
$var wire 1 > mem_read $end
$var wire 16 ? instruction [15:0] $end
$var wire 8 @ immediate [7:0] $end
$var wire 8 A data_out [7:0] $end
$var wire 1 B alu_src $end
$var wire 8 C alu_result [7:0] $end
$var wire 2 D alu_op [1:0] $end
$var wire 8 E alu_b [7:0] $end
$scope module alu_inst $end
$var wire 8 F b [7:0] $end
$var wire 2 G op [1:0] $end
$var wire 8 H a [7:0] $end
$var reg 8 I result [7:0] $end
$upscope $end
$scope module ctrl $end
$var wire 3 J opcode [2:0] $end
$var reg 2 K alu_op [1:0] $end
$var reg 1 B alu_src $end
$var reg 1 > mem_read $end
$var reg 1 < mem_to_reg $end
$var reg 1 ; mem_write $end
$var reg 1 6 pc_src $end
$var reg 1 2 reg_write $end
$upscope $end
$scope module dmem $end
$var wire 8 L address [7:0] $end
$var wire 1 + clk $end
$var wire 8 M external_data_in [7:0] $end
$var wire 1 > mem_read $end
$var wire 1 ; mem_write $end
$var wire 8 N write_data [7:0] $end
$var reg 8 O read_data [7:0] $end
$upscope $end
$scope module imem $end
$var wire 8 P address [7:0] $end
$var reg 16 Q instruction [15:0] $end
$scope begin $ivl_for_loop0 $end
$var integer 32 R i [31:0] $end
$upscope $end
$upscope $end
$scope module pc_inst $end
$var wire 1 + clk $end
$var wire 8 S next_pc [7:0] $end
$var wire 1 - reset $end
$var reg 8 T current_pc [7:0] $end
$upscope $end
$scope module rf $end
$var wire 1 + clk $end
$var wire 2 U read_reg1 [1:0] $end
$var wire 2 V read_reg2 [1:0] $end
$var wire 1 2 reg_write $end
$var wire 1 - reset $end
$var wire 8 W write_data [7:0] $end
$var wire 2 X write_reg [1:0] $end
$var reg 8 Y read_data1 [7:0] $end
$var reg 8 Z read_data2 [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 Z
b0 Y
b1 X
bx W
b0 V
b0 U
b0 T
b1 S
b100000000 R
b100100000010000 Q
b0 P
bx O
b0 N
b0 M
b10000 L
b0 K
b10 J
b10000 I
b0 H
b0 G
b10000 F
b10000 E
b0 D
b10000 C
1B
b0 A
b10000 @
b100100000010000 ?
1>
bx =
1<
0;
b10 :
b0 9
b1 8
b1 7
06
b1 5
b0 4
b0 3
12
b0 1
b0 0
bx /
b0 .
1-
b0 ,
0+
b0 *
b0 )
b0 (
b0 '
b0 &
0%
b0 $
b10 #
0"
b100100000010000 !
$end
#5000
b10100101 /
b10100101 W
b10100101 =
b10100101 O
1+
#10000
0+
0-
#15000
b10100101 C
b10100101 I
b10100101 L
b10100101 /
b10100101 W
b0 E
b0 F
b10100101 4
b10100101 H
b10100101 Y
12
0>
0B
0<
b0 @
b1 1
b1 U
b10 5
b10 X
b0 #
b0 :
b0 J
b10 8
b10 S
b1001000000000 !
b1001000000000 ?
b1001000000000 Q
b10 7
b1 $
b1 9
b1 P
b1 T
b10100101 '
1+
#20000
b10000 E
b10000 F
1<
1B
1>
12
b10000 C
b10000 I
b10000 L
b10000 @
b0 1
b0 U
b1 5
b1 X
b10 #
b10 :
b10 J
b0 4
b0 H
b0 Y
b1 8
b1 S
b100100000010000 !
b100100000010000 ?
b100100000010000 Q
b0 '
b1 7
b0 $
b0 9
b0 P
b0 T
0+
1-
#25000
1+
#30000
0+
#35000
1+
#40000
0+
0-
#45000
b10100101 C
b10100101 I
b10100101 L
b10100101 /
b10100101 W
b0 E
b0 F
b10100101 4
b10100101 H
b10100101 Y
12
0>
0B
0<
b0 @
b1 1
b1 U
b10 5
b10 X
b0 #
b0 :
b0 J
b10 8
b10 S
b1001000000000 !
b1001000000000 ?
b1001000000000 Q
b10 7
b1 $
b1 9
b1 P
b1 T
b10100101 '
1+
#50000
0+
#55000
b100000 /
b100000 W
b100000 C
b100000 I
b100000 L
b100000 E
b100000 F
b0 4
b0 H
b0 Y
1B
1"
1;
02
b100000 @
b0 1
b0 U
b11 #
b11 :
b11 J
b11 8
b11 S
b111000000100000 !
b111000000100000 ?
b111000000100000 Q
b10100101 (
b11 7
b10 $
b10 9
b10 P
b10 T
1+
#60000
0+
#65000
b0 /
b0 W
b0 C
b0 I
b0 L
b0 E
b0 F
1%
16
0"
0;
0B
b101 @
b0 5
b0 X
b100 #
b100 :
b100 J
b101 8
b101 S
b1000000000000101 !
b1000000000000101 ?
b1000000000000101 Q
b100 7
b11 $
b11 9
b11 P
b11 T
1+
#70000
0+
#75000
b11111111 C
b11111111 I
b11111111 L
b10100101 /
b10100101 W
b11111111 E
b11111111 F
b110 8
b110 S
b10100101 3
b10100101 N
b10100101 Z
1<
1B
1>
12
0%
06
b11111111 @
b1 0
b1 V
b1 5
b1 X
b10 #
b10 :
b10 J
b100100011111111 !
b100100011111111 ?
b100100011111111 Q
b110 7
b101 $
b101 9
b101 P
b101 T
1+
#80000
0+
#85000
b10100101 C
b10100101 I
b10100101 L
b0 E
b0 F
b0 3
b0 N
b0 Z
b10100101 4
b10100101 H
b10100101 Y
12
0>
0B
0<
b10000000 @
b11 0
b11 V
b10 1
b10 U
b11 5
b11 X
b0 #
b0 :
b0 J
b10100101 /
b10100101 W
b111 8
b111 S
b1110110000000 !
b1110110000000 ?
b1110110000000 Q
b0 =
b0 O
b111 7
b110 $
b110 9
b110 P
b110 T
1+
#86000
b11110000 ,
b11110000 .
b11110000 M
#90000
0+
#95000
b0 /
b0 W
b0 C
b0 I
b0 L
b0 4
b0 H
b0 Y
b0 E
b0 F
b0 @
b0 0
b0 V
b0 1
b0 U
b0 5
b0 X
b0 3
b0 N
b0 Z
b1000 8
b1000 S
b0 !
b0 ?
b0 Q
b10100101 )
b1000 7
b111 $
b111 9
b111 P
b111 T
1+
#100000
0+
#105000
b1001 8
b1001 S
b1001 7
b1000 $
b1000 9
b1000 P
b1000 T
1+
#110000
0+
#115000
b1010 8
b1010 S
b1010 7
b1001 $
b1001 9
b1001 P
b1001 T
1+
#116000
b10000 C
b10000 I
b10000 L
b10000 E
b10000 F
1<
1B
1>
12
b10000 @
b1 5
b1 X
b10 #
b10 :
b10 J
b1 8
b1 S
b100100000010000 !
b100100000010000 ?
b100100000010000 Q
b1 7
b0 $
b0 9
b0 P
b0 T
b0 )
b0 (
b0 '
1-
#120000
0+
#125000
b10100101 /
b10100101 W
b10100101 =
b10100101 O
1+
#130000
0+
#135000
1+
#136000
0-
#140000
0+
#145000
b10100101 C
b10100101 I
b10100101 L
b10100101 /
b10100101 W
b0 E
b0 F
b10100101 4
b10100101 H
b10100101 Y
12
0>
0B
0<
b0 @
b1 1
b1 U
b10 5
b10 X
b0 #
b0 :
b0 J
b10 8
b10 S
b1001000000000 !
b1001000000000 ?
b1001000000000 Q
b10100101 '
b10 7
b1 $
b1 9
b1 P
b1 T
1+
#146000
